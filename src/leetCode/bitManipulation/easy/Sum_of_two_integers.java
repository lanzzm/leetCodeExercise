package leetCode.bitManipulation.easy;

/**
 * @author lanzm
 * link:https://leetcode-cn.com/problems/sum-of-two-integers/
 * leet code serial number:371
 */
public class Sum_of_two_integers {
	
    public int getSum(int a, int b) {
    	int sum = a^b;
    	int carry = (a&b)<<1;
    	
    	if(carry!=0){
    		return getSum(sum,carry);
    	}
    	return sum;
    }	
    
    
    //真TM节俭...
    public int getSum_02(int a, int b) {
        return b == 0 ? a : getSum_02(a^b,(a&b)<<1);
    }	
 
    
    
    //演示一下负数的加减
    public int getSum_03(int a, int b) {
    	//示例1
    	//a = -11; 			//  1111 1111 1111 1111 1111 1111 1111 0101 
    	//b = 7 ;    		//  0000 0000 0000 0000 0000 0000 0000 0111
    	
    	//a^b; 				//  1111 1111 1111 1111 1111 1111 1111 0010
    	//(a&b)<<1; 		//  0000 0000 0000 0000 0000 0000 0000 1010
    	
  	
    	//sum   			//  1111 1111 1111 1111 1111 1111 1111 1000
    	//carry				//  0000 0000 0000 0000 0000 0000 0000 0100
    	
    	
    	//sum				//  1111 1111 1111 1111 1111 1111 1111 1100 
    	//carry				//  0000 0000 0000 0000 0000 0000 0000 0000
    	
    	//res				//  0000 0000 0000 0000 0000 0000 0000 0010
    	
    	
    	//示例2
    	//a = -11; 			//  1111 1111 1111 1111 1111 1111 1111 0101 
    	//b = 25 ;    		//  0000 0000 0000 0000 0000 0000 0001 1001   	
    	
    	//a^b; 				//  1111 1111 1111 1111 1111 1111 1111 1100
    	//(a&b)<<1; 		//  0000 0000 0000 0000 0000 0000 0010 0010   	
    	
    	//a^b; 				//  1111 1111 1111 1111 1111 1111 1101 1110
    	//(a&b)<<1; 		//  0000 0000 0000 0000 0000 0000 0100 0000   	
    	
    	//a^b; 				//  1111 1111 1111 1111 1111 1111 1001 1110
    	//(a&b)<<1; 		//  0000 0000 0000 0000 0000 0000 1000 0000 
    	
    	//a^b; 				//  1111 1111 1111 1111 1111 1111 0001 1110
    	//(a&b)<<1; 		//  0000 0000 0000 0000 0000 0001 0000 0000     	
    	
    	//.....一直移到左边就对了--! 
    	return 1;
    }	  
    
    
    
    
    
    
    
    
    
    
    
    
    
	
}
